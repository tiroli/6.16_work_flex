.container {
    display: flex;
    height: 450px;
    gap: 10px;
}

.background,
.flexBox {
    width: 300px;
    font-size: 100px;
    color: darkorange;

}

.background {
    background: url(../image/bg3.jpg) no-repeat 0/100% 100%;
    text-align: center;
    line-height: 450px;
    opacity: .3;
}

/* ============================================================== */

.flexBox {
    display: flex;
    justify-content: center;
    align-items: center;

    position: relative;
}

/* 
    가상요소 선택자에 부모의 크기에 맞추어 배경을 지정하되 absolute 를
    지정함으로써 플렉스 컨테이너 내의 다른 아이템과 다른 문맥흐름을
    가지게 됨으로써 옵셋 설정없이도 플렉스 컨테이너의 최초 시점부터
    자리를 차지하여 별도의 독립적인 배경 설정이 가능.
    
    ※ absolute 를 지정한 요소도 옵셋이 지정되지 않은 상태에서는 일반
       static 아이템과 동일하게 플렉스 속성 설정이 동일하게 적용됨에
       주의.
       단, 옵셋이 지정된 상태에서는 옵셋이 걸린 방향에 대해서는 플렉스
       속성이 적용되지 않음.
*/
.flexBox::after {
    content: "";
    width: 100%;
    height: 100%;
    background: url(../image/bg3.jpg) no-repeat 0/100% 100%;
    opacity: .3;

    position: absolute;

    /* 
        부모요소인 flexBox 컨테이너에 의해 간접적 relative 포지션 속성을
        가지는 span 보다 직접적인 포지션 설정이 우선시 적용되는 백그라운드가
        absolute 로 올라옴으로써 span 요소의 컨텐츠가 가려지므로 백그라운드의
        z 축을 변경하여 내림.
    */
    z-index: -1;
}